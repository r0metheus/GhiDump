// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symbols.proto

package protoclasses;

public final class SymbolsProto {
  private SymbolsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SymbolMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protoclasses.SymbolMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>uint64 long_address = 2;</code>
     * @return The longAddress.
     */
    long getLongAddress();

    /**
     * <code>string symbolic_address = 3;</code>
     * @return The symbolicAddress.
     */
    java.lang.String getSymbolicAddress();
    /**
     * <code>string symbolic_address = 3;</code>
     * @return The bytes for symbolicAddress.
     */
    com.google.protobuf.ByteString
        getSymbolicAddressBytes();

    /**
     * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
     * @return The type.
     */
    protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType getType();

    /**
     * <code>string namespace = 5;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <code>string namespace = 5;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
     * @return The enum numeric value on the wire for source.
     */
    int getSourceValue();
    /**
     * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
     * @return The source.
     */
    protoclasses.SymbolsProto.SymbolMessage.SourceType getSource();

    /**
     * <code>repeated int32 reference_id = 8;</code>
     * @return A list containing the referenceId.
     */
    java.util.List<java.lang.Integer> getReferenceIdList();
    /**
     * <code>repeated int32 reference_id = 8;</code>
     * @return The count of referenceId.
     */
    int getReferenceIdCount();
    /**
     * <code>repeated int32 reference_id = 8;</code>
     * @param index The index of the element to return.
     * @return The referenceId at the given index.
     */
    int getReferenceId(int index);

    public protoclasses.SymbolsProto.SymbolMessage.AddressCase getAddressCase();
  }
  /**
   * Protobuf type {@code protoclasses.SymbolMessage}
   */
  public  static final class SymbolMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protoclasses.SymbolMessage)
      SymbolMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SymbolMessage.newBuilder() to construct.
    private SymbolMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolMessage() {
      name_ = "";
      type_ = 0;
      namespace_ = "";
      source_ = 0;
      referenceId_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SymbolMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SymbolMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              addressCase_ = 2;
              address_ = input.readUInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              addressCase_ = 3;
              address_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              source_ = rawValue;
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                referenceId_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              referenceId_.addInt(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                referenceId_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                referenceId_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          referenceId_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protoclasses.SymbolsProto.SymbolMessage.class, protoclasses.SymbolsProto.SymbolMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code protoclasses.SymbolMessage.SymbolMessageType}
     */
    public enum SymbolMessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NULL = 0;</code>
       */
      NULL(0),
      /**
       * <code>LABEL = 1;</code>
       */
      LABEL(1),
      /**
       * <code>LIBRARY = 2;</code>
       */
      LIBRARY(2),
      /**
       * <code>NAMESPACE = 3;</code>
       */
      NAMESPACE(3),
      /**
       * <code>CLASS = 4;</code>
       */
      CLASS(4),
      /**
       * <code>FUNCTION = 5;</code>
       */
      FUNCTION(5),
      /**
       * <code>PARAMETER = 6;</code>
       */
      PARAMETER(6),
      /**
       * <code>LOCAL_VAR = 7;</code>
       */
      LOCAL_VAR(7),
      /**
       * <code>GLOBAL_VAR = 8;</code>
       */
      GLOBAL_VAR(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NULL = 0;</code>
       */
      public static final int NULL_VALUE = 0;
      /**
       * <code>LABEL = 1;</code>
       */
      public static final int LABEL_VALUE = 1;
      /**
       * <code>LIBRARY = 2;</code>
       */
      public static final int LIBRARY_VALUE = 2;
      /**
       * <code>NAMESPACE = 3;</code>
       */
      public static final int NAMESPACE_VALUE = 3;
      /**
       * <code>CLASS = 4;</code>
       */
      public static final int CLASS_VALUE = 4;
      /**
       * <code>FUNCTION = 5;</code>
       */
      public static final int FUNCTION_VALUE = 5;
      /**
       * <code>PARAMETER = 6;</code>
       */
      public static final int PARAMETER_VALUE = 6;
      /**
       * <code>LOCAL_VAR = 7;</code>
       */
      public static final int LOCAL_VAR_VALUE = 7;
      /**
       * <code>GLOBAL_VAR = 8;</code>
       */
      public static final int GLOBAL_VAR_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SymbolMessageType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SymbolMessageType forNumber(int value) {
        switch (value) {
          case 0: return NULL;
          case 1: return LABEL;
          case 2: return LIBRARY;
          case 3: return NAMESPACE;
          case 4: return CLASS;
          case 5: return FUNCTION;
          case 6: return PARAMETER;
          case 7: return LOCAL_VAR;
          case 8: return GLOBAL_VAR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SymbolMessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SymbolMessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SymbolMessageType>() {
              public SymbolMessageType findValueByNumber(int number) {
                return SymbolMessageType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return protoclasses.SymbolsProto.SymbolMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final SymbolMessageType[] VALUES = values();

      public static SymbolMessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SymbolMessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protoclasses.SymbolMessage.SymbolMessageType)
    }

    /**
     * Protobuf enum {@code protoclasses.SymbolMessage.SourceType}
     */
    public enum SourceType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DEFAULT = 0;</code>
       */
      DEFAULT(0),
      /**
       * <code>ANALYSIS = 1;</code>
       */
      ANALYSIS(1),
      /**
       * <code>IMPORTED = 2;</code>
       */
      IMPORTED(2),
      /**
       * <code>USER_DEFINED = 3;</code>
       */
      USER_DEFINED(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>DEFAULT = 0;</code>
       */
      public static final int DEFAULT_VALUE = 0;
      /**
       * <code>ANALYSIS = 1;</code>
       */
      public static final int ANALYSIS_VALUE = 1;
      /**
       * <code>IMPORTED = 2;</code>
       */
      public static final int IMPORTED_VALUE = 2;
      /**
       * <code>USER_DEFINED = 3;</code>
       */
      public static final int USER_DEFINED_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SourceType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SourceType forNumber(int value) {
        switch (value) {
          case 0: return DEFAULT;
          case 1: return ANALYSIS;
          case 2: return IMPORTED;
          case 3: return USER_DEFINED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SourceType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SourceType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SourceType>() {
              public SourceType findValueByNumber(int number) {
                return SourceType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return protoclasses.SymbolsProto.SymbolMessage.getDescriptor().getEnumTypes().get(1);
      }

      private static final SourceType[] VALUES = values();

      public static SourceType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SourceType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protoclasses.SymbolMessage.SourceType)
    }

    private int addressCase_ = 0;
    private java.lang.Object address_;
    public enum AddressCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LONG_ADDRESS(2),
      SYMBOLIC_ADDRESS(3),
      ADDRESS_NOT_SET(0);
      private final int value;
      private AddressCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AddressCase valueOf(int value) {
        return forNumber(value);
      }

      public static AddressCase forNumber(int value) {
        switch (value) {
          case 2: return LONG_ADDRESS;
          case 3: return SYMBOLIC_ADDRESS;
          case 0: return ADDRESS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public AddressCase
    getAddressCase() {
      return AddressCase.forNumber(
          addressCase_);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LONG_ADDRESS_FIELD_NUMBER = 2;
    /**
     * <code>uint64 long_address = 2;</code>
     * @return The longAddress.
     */
    public long getLongAddress() {
      if (addressCase_ == 2) {
        return (java.lang.Long) address_;
      }
      return 0L;
    }

    public static final int SYMBOLIC_ADDRESS_FIELD_NUMBER = 3;
    /**
     * <code>string symbolic_address = 3;</code>
     * @return The symbolicAddress.
     */
    public java.lang.String getSymbolicAddress() {
      java.lang.Object ref = "";
      if (addressCase_ == 3) {
        ref = address_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (addressCase_ == 3) {
          address_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string symbolic_address = 3;</code>
     * @return The bytes for symbolicAddress.
     */
    public com.google.protobuf.ByteString
        getSymbolicAddressBytes() {
      java.lang.Object ref = "";
      if (addressCase_ == 3) {
        ref = address_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (addressCase_ == 3) {
          address_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
     * @return The enum numeric value on the wire for type.
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
     * @return The type.
     */
    public protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType getType() {
      @SuppressWarnings("deprecation")
      protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType result = protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType.valueOf(type_);
      return result == null ? protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType.UNRECOGNIZED : result;
    }

    public static final int NAMESPACE_FIELD_NUMBER = 5;
    private volatile java.lang.Object namespace_;
    /**
     * <code>string namespace = 5;</code>
     * @return The namespace.
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <code>string namespace = 5;</code>
     * @return The bytes for namespace.
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 6;
    private int source_;
    /**
     * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
     * @return The enum numeric value on the wire for source.
     */
    public int getSourceValue() {
      return source_;
    }
    /**
     * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
     * @return The source.
     */
    public protoclasses.SymbolsProto.SymbolMessage.SourceType getSource() {
      @SuppressWarnings("deprecation")
      protoclasses.SymbolsProto.SymbolMessage.SourceType result = protoclasses.SymbolsProto.SymbolMessage.SourceType.valueOf(source_);
      return result == null ? protoclasses.SymbolsProto.SymbolMessage.SourceType.UNRECOGNIZED : result;
    }

    public static final int REFERENCE_ID_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList referenceId_;
    /**
     * <code>repeated int32 reference_id = 8;</code>
     * @return A list containing the referenceId.
     */
    public java.util.List<java.lang.Integer>
        getReferenceIdList() {
      return referenceId_;
    }
    /**
     * <code>repeated int32 reference_id = 8;</code>
     * @return The count of referenceId.
     */
    public int getReferenceIdCount() {
      return referenceId_.size();
    }
    /**
     * <code>repeated int32 reference_id = 8;</code>
     * @param index The index of the element to return.
     * @return The referenceId at the given index.
     */
    public int getReferenceId(int index) {
      return referenceId_.getInt(index);
    }
    private int referenceIdMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (addressCase_ == 2) {
        output.writeUInt64(
            2, (long)((java.lang.Long) address_));
      }
      if (addressCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, address_);
      }
      if (type_ != protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType.NULL.getNumber()) {
        output.writeEnum(4, type_);
      }
      if (!getNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, namespace_);
      }
      if (source_ != protoclasses.SymbolsProto.SymbolMessage.SourceType.DEFAULT.getNumber()) {
        output.writeEnum(6, source_);
      }
      if (getReferenceIdList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(referenceIdMemoizedSerializedSize);
      }
      for (int i = 0; i < referenceId_.size(); i++) {
        output.writeInt32NoTag(referenceId_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (addressCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              2, (long)((java.lang.Long) address_));
      }
      if (addressCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, address_);
      }
      if (type_ != protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType.NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_);
      }
      if (!getNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, namespace_);
      }
      if (source_ != protoclasses.SymbolsProto.SymbolMessage.SourceType.DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, source_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < referenceId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(referenceId_.getInt(i));
        }
        size += dataSize;
        if (!getReferenceIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        referenceIdMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protoclasses.SymbolsProto.SymbolMessage)) {
        return super.equals(obj);
      }
      protoclasses.SymbolsProto.SymbolMessage other = (protoclasses.SymbolsProto.SymbolMessage) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (type_ != other.type_) return false;
      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (source_ != other.source_) return false;
      if (!getReferenceIdList()
          .equals(other.getReferenceIdList())) return false;
      if (!getAddressCase().equals(other.getAddressCase())) return false;
      switch (addressCase_) {
        case 2:
          if (getLongAddress()
              != other.getLongAddress()) return false;
          break;
        case 3:
          if (!getSymbolicAddress()
              .equals(other.getSymbolicAddress())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + source_;
      if (getReferenceIdCount() > 0) {
        hash = (37 * hash) + REFERENCE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceIdList().hashCode();
      }
      switch (addressCase_) {
        case 2:
          hash = (37 * hash) + LONG_ADDRESS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLongAddress());
          break;
        case 3:
          hash = (37 * hash) + SYMBOLIC_ADDRESS_FIELD_NUMBER;
          hash = (53 * hash) + getSymbolicAddress().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protoclasses.SymbolsProto.SymbolMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protoclasses.SymbolsProto.SymbolMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protoclasses.SymbolMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protoclasses.SymbolMessage)
        protoclasses.SymbolsProto.SymbolMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protoclasses.SymbolsProto.SymbolMessage.class, protoclasses.SymbolsProto.SymbolMessage.Builder.class);
      }

      // Construct using protoclasses.SymbolsProto.SymbolMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        type_ = 0;

        namespace_ = "";

        source_ = 0;

        referenceId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        addressCase_ = 0;
        address_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolMessage_descriptor;
      }

      @java.lang.Override
      public protoclasses.SymbolsProto.SymbolMessage getDefaultInstanceForType() {
        return protoclasses.SymbolsProto.SymbolMessage.getDefaultInstance();
      }

      @java.lang.Override
      public protoclasses.SymbolsProto.SymbolMessage build() {
        protoclasses.SymbolsProto.SymbolMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protoclasses.SymbolsProto.SymbolMessage buildPartial() {
        protoclasses.SymbolsProto.SymbolMessage result = new protoclasses.SymbolsProto.SymbolMessage(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        if (addressCase_ == 2) {
          result.address_ = address_;
        }
        if (addressCase_ == 3) {
          result.address_ = address_;
        }
        result.type_ = type_;
        result.namespace_ = namespace_;
        result.source_ = source_;
        if (((bitField0_ & 0x00000001) != 0)) {
          referenceId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.referenceId_ = referenceId_;
        result.addressCase_ = addressCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protoclasses.SymbolsProto.SymbolMessage) {
          return mergeFrom((protoclasses.SymbolsProto.SymbolMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protoclasses.SymbolsProto.SymbolMessage other) {
        if (other == protoclasses.SymbolsProto.SymbolMessage.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        if (other.source_ != 0) {
          setSourceValue(other.getSourceValue());
        }
        if (!other.referenceId_.isEmpty()) {
          if (referenceId_.isEmpty()) {
            referenceId_ = other.referenceId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReferenceIdIsMutable();
            referenceId_.addAll(other.referenceId_);
          }
          onChanged();
        }
        switch (other.getAddressCase()) {
          case LONG_ADDRESS: {
            setLongAddress(other.getLongAddress());
            break;
          }
          case SYMBOLIC_ADDRESS: {
            addressCase_ = 3;
            address_ = other.address_;
            onChanged();
            break;
          }
          case ADDRESS_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protoclasses.SymbolsProto.SymbolMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protoclasses.SymbolsProto.SymbolMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int addressCase_ = 0;
      private java.lang.Object address_;
      public AddressCase
          getAddressCase() {
        return AddressCase.forNumber(
            addressCase_);
      }

      public Builder clearAddress() {
        addressCase_ = 0;
        address_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>uint64 long_address = 2;</code>
       * @return The longAddress.
       */
      public long getLongAddress() {
        if (addressCase_ == 2) {
          return (java.lang.Long) address_;
        }
        return 0L;
      }
      /**
       * <code>uint64 long_address = 2;</code>
       * @param value The longAddress to set.
       * @return This builder for chaining.
       */
      public Builder setLongAddress(long value) {
        addressCase_ = 2;
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 long_address = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongAddress() {
        if (addressCase_ == 2) {
          addressCase_ = 0;
          address_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string symbolic_address = 3;</code>
       * @return The symbolicAddress.
       */
      public java.lang.String getSymbolicAddress() {
        java.lang.Object ref = "";
        if (addressCase_ == 3) {
          ref = address_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (addressCase_ == 3) {
            address_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbolic_address = 3;</code>
       * @return The bytes for symbolicAddress.
       */
      public com.google.protobuf.ByteString
          getSymbolicAddressBytes() {
        java.lang.Object ref = "";
        if (addressCase_ == 3) {
          ref = address_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (addressCase_ == 3) {
            address_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbolic_address = 3;</code>
       * @param value The symbolicAddress to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolicAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  addressCase_ = 3;
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbolic_address = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbolicAddress() {
        if (addressCase_ == 3) {
          addressCase_ = 0;
          address_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string symbolic_address = 3;</code>
       * @param value The bytes for symbolicAddress to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolicAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        addressCase_ = 3;
        address_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
       * @return The enum numeric value on the wire for type.
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
       * @return The type.
       */
      public protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType getType() {
        @SuppressWarnings("deprecation")
        protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType result = protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType.valueOf(type_);
        return result == null ? protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(protoclasses.SymbolsProto.SymbolMessage.SymbolMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SymbolMessageType type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <code>string namespace = 5;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string namespace = 5;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string namespace = 5;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 5;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }

      private int source_ = 0;
      /**
       * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
       * @return The enum numeric value on the wire for source.
       */
      public int getSourceValue() {
        return source_;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
       * @param value The enum numeric value on the wire for source to set.
       * @return This builder for chaining.
       */
      public Builder setSourceValue(int value) {
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
       * @return The source.
       */
      public protoclasses.SymbolsProto.SymbolMessage.SourceType getSource() {
        @SuppressWarnings("deprecation")
        protoclasses.SymbolsProto.SymbolMessage.SourceType result = protoclasses.SymbolsProto.SymbolMessage.SourceType.valueOf(source_);
        return result == null ? protoclasses.SymbolsProto.SymbolMessage.SourceType.UNRECOGNIZED : result;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(protoclasses.SymbolsProto.SymbolMessage.SourceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        source_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protoclasses.SymbolMessage.SourceType source = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        
        source_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList referenceId_ = emptyIntList();
      private void ensureReferenceIdIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          referenceId_ = mutableCopy(referenceId_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 reference_id = 8;</code>
       * @return A list containing the referenceId.
       */
      public java.util.List<java.lang.Integer>
          getReferenceIdList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(referenceId_) : referenceId_;
      }
      /**
       * <code>repeated int32 reference_id = 8;</code>
       * @return The count of referenceId.
       */
      public int getReferenceIdCount() {
        return referenceId_.size();
      }
      /**
       * <code>repeated int32 reference_id = 8;</code>
       * @param index The index of the element to return.
       * @return The referenceId at the given index.
       */
      public int getReferenceId(int index) {
        return referenceId_.getInt(index);
      }
      /**
       * <code>repeated int32 reference_id = 8;</code>
       * @param index The index to set the value at.
       * @param value The referenceId to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceId(
          int index, int value) {
        ensureReferenceIdIsMutable();
        referenceId_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reference_id = 8;</code>
       * @param value The referenceId to add.
       * @return This builder for chaining.
       */
      public Builder addReferenceId(int value) {
        ensureReferenceIdIsMutable();
        referenceId_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reference_id = 8;</code>
       * @param values The referenceId to add.
       * @return This builder for chaining.
       */
      public Builder addAllReferenceId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureReferenceIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referenceId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reference_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceId() {
        referenceId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protoclasses.SymbolMessage)
    }

    // @@protoc_insertion_point(class_scope:protoclasses.SymbolMessage)
    private static final protoclasses.SymbolsProto.SymbolMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protoclasses.SymbolsProto.SymbolMessage();
    }

    public static protoclasses.SymbolsProto.SymbolMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SymbolMessage>
        PARSER = new com.google.protobuf.AbstractParser<SymbolMessage>() {
      @java.lang.Override
      public SymbolMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SymbolMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SymbolMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protoclasses.SymbolsProto.SymbolMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SymbolsListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protoclasses.SymbolsList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    java.util.List<protoclasses.SymbolsProto.SymbolMessage> 
        getSymbolsList();
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    protoclasses.SymbolsProto.SymbolMessage getSymbols(int index);
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    java.util.List<? extends protoclasses.SymbolsProto.SymbolMessageOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    protoclasses.SymbolsProto.SymbolMessageOrBuilder getSymbolsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protoclasses.SymbolsList}
   */
  public  static final class SymbolsList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protoclasses.SymbolsList)
      SymbolsListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SymbolsList.newBuilder() to construct.
    private SymbolsList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolsList() {
      symbols_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SymbolsList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SymbolsList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                symbols_ = new java.util.ArrayList<protoclasses.SymbolsProto.SymbolMessage>();
                mutable_bitField0_ |= 0x00000001;
              }
              symbols_.add(
                  input.readMessage(protoclasses.SymbolsProto.SymbolMessage.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolsList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolsList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protoclasses.SymbolsProto.SymbolsList.class, protoclasses.SymbolsProto.SymbolsList.Builder.class);
    }

    public static final int SYMBOLS_FIELD_NUMBER = 1;
    private java.util.List<protoclasses.SymbolsProto.SymbolMessage> symbols_;
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    public java.util.List<protoclasses.SymbolsProto.SymbolMessage> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    public java.util.List<? extends protoclasses.SymbolsProto.SymbolMessageOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    public protoclasses.SymbolsProto.SymbolMessage getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
     */
    public protoclasses.SymbolsProto.SymbolMessageOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(1, symbols_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, symbols_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protoclasses.SymbolsProto.SymbolsList)) {
        return super.equals(obj);
      }
      protoclasses.SymbolsProto.SymbolsList other = (protoclasses.SymbolsProto.SymbolsList) obj;

      if (!getSymbolsList()
          .equals(other.getSymbolsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSymbolsCount() > 0) {
        hash = (37 * hash) + SYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protoclasses.SymbolsProto.SymbolsList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protoclasses.SymbolsProto.SymbolsList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protoclasses.SymbolsList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protoclasses.SymbolsList)
        protoclasses.SymbolsProto.SymbolsListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolsList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolsList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protoclasses.SymbolsProto.SymbolsList.class, protoclasses.SymbolsProto.SymbolsList.Builder.class);
      }

      // Construct using protoclasses.SymbolsProto.SymbolsList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSymbolsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protoclasses.SymbolsProto.internal_static_protoclasses_SymbolsList_descriptor;
      }

      @java.lang.Override
      public protoclasses.SymbolsProto.SymbolsList getDefaultInstanceForType() {
        return protoclasses.SymbolsProto.SymbolsList.getDefaultInstance();
      }

      @java.lang.Override
      public protoclasses.SymbolsProto.SymbolsList build() {
        protoclasses.SymbolsProto.SymbolsList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protoclasses.SymbolsProto.SymbolsList buildPartial() {
        protoclasses.SymbolsProto.SymbolsList result = new protoclasses.SymbolsProto.SymbolsList(this);
        int from_bitField0_ = bitField0_;
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protoclasses.SymbolsProto.SymbolsList) {
          return mergeFrom((protoclasses.SymbolsProto.SymbolsList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protoclasses.SymbolsProto.SymbolsList other) {
        if (other == protoclasses.SymbolsProto.SymbolsList.getDefaultInstance()) return this;
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000001);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protoclasses.SymbolsProto.SymbolsList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protoclasses.SymbolsProto.SymbolsList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<protoclasses.SymbolsProto.SymbolMessage> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          symbols_ = new java.util.ArrayList<protoclasses.SymbolsProto.SymbolMessage>(symbols_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protoclasses.SymbolsProto.SymbolMessage, protoclasses.SymbolsProto.SymbolMessage.Builder, protoclasses.SymbolsProto.SymbolMessageOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public java.util.List<protoclasses.SymbolsProto.SymbolMessage> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public protoclasses.SymbolsProto.SymbolMessage getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder setSymbols(
          int index, protoclasses.SymbolsProto.SymbolMessage value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder setSymbols(
          int index, protoclasses.SymbolsProto.SymbolMessage.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder addSymbols(protoclasses.SymbolsProto.SymbolMessage value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder addSymbols(
          int index, protoclasses.SymbolsProto.SymbolMessage value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder addSymbols(
          protoclasses.SymbolsProto.SymbolMessage.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder addSymbols(
          int index, protoclasses.SymbolsProto.SymbolMessage.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends protoclasses.SymbolsProto.SymbolMessage> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public protoclasses.SymbolsProto.SymbolMessage.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public protoclasses.SymbolsProto.SymbolMessageOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public java.util.List<? extends protoclasses.SymbolsProto.SymbolMessageOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public protoclasses.SymbolsProto.SymbolMessage.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            protoclasses.SymbolsProto.SymbolMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public protoclasses.SymbolsProto.SymbolMessage.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, protoclasses.SymbolsProto.SymbolMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .protoclasses.SymbolMessage symbols = 1;</code>
       */
      public java.util.List<protoclasses.SymbolsProto.SymbolMessage.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protoclasses.SymbolsProto.SymbolMessage, protoclasses.SymbolsProto.SymbolMessage.Builder, protoclasses.SymbolsProto.SymbolMessageOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protoclasses.SymbolsProto.SymbolMessage, protoclasses.SymbolsProto.SymbolMessage.Builder, protoclasses.SymbolsProto.SymbolMessageOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protoclasses.SymbolsList)
    }

    // @@protoc_insertion_point(class_scope:protoclasses.SymbolsList)
    private static final protoclasses.SymbolsProto.SymbolsList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protoclasses.SymbolsProto.SymbolsList();
    }

    public static protoclasses.SymbolsProto.SymbolsList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SymbolsList>
        PARSER = new com.google.protobuf.AbstractParser<SymbolsList>() {
      @java.lang.Override
      public SymbolsList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SymbolsList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SymbolsList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolsList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protoclasses.SymbolsProto.SymbolsList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protoclasses_SymbolMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protoclasses_SymbolMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protoclasses_SymbolsList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protoclasses_SymbolsList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rsymbols.proto\022\014protoclasses\"\321\003\n\rSymbol" +
      "Message\022\014\n\004name\030\001 \001(\t\022\026\n\014long_address\030\002 " +
      "\001(\004H\000\022\032\n\020symbolic_address\030\003 \001(\tH\000\022;\n\004typ" +
      "e\030\004 \001(\0162-.protoclasses.SymbolMessage.Sym" +
      "bolMessageType\022\021\n\tnamespace\030\005 \001(\t\0226\n\006sou" +
      "rce\030\006 \001(\0162&.protoclasses.SymbolMessage.S" +
      "ourceType\022\024\n\014reference_id\030\010 \003(\005\"\213\001\n\021Symb" +
      "olMessageType\022\010\n\004NULL\020\000\022\t\n\005LABEL\020\001\022\013\n\007LI" +
      "BRARY\020\002\022\r\n\tNAMESPACE\020\003\022\t\n\005CLASS\020\004\022\014\n\010FUN" +
      "CTION\020\005\022\r\n\tPARAMETER\020\006\022\r\n\tLOCAL_VAR\020\007\022\016\n" +
      "\nGLOBAL_VAR\020\010\"G\n\nSourceType\022\013\n\007DEFAULT\020\000" +
      "\022\014\n\010ANALYSIS\020\001\022\014\n\010IMPORTED\020\002\022\020\n\014USER_DEF" +
      "INED\020\003B\t\n\007address\";\n\013SymbolsList\022,\n\007symb" +
      "ols\030\001 \003(\0132\033.protoclasses.SymbolMessageB\016" +
      "B\014SymbolsProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_protoclasses_SymbolMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protoclasses_SymbolMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protoclasses_SymbolMessage_descriptor,
        new java.lang.String[] { "Name", "LongAddress", "SymbolicAddress", "Type", "Namespace", "Source", "ReferenceId", "Address", });
    internal_static_protoclasses_SymbolsList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protoclasses_SymbolsList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protoclasses_SymbolsList_descriptor,
        new java.lang.String[] { "Symbols", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
